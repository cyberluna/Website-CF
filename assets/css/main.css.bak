@import url("fontawesome-all.min.css");
@import url("https://fonts.googleapis.com/css?family=Roboto:100,300,100italic,300italic");
@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');

/*
	Landed by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
*/

html, body, div, span, applet, object,
iframe, h1, h2, h3, h4, h5, h6, p, blockquote,
pre, a, abbr, acronym, address, big, cite,
code, del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var, b,
u, i, center, dl, dt, dd, ol, ul, li, fieldset,
form, label, legend, table, caption, tbody,
tfoot, thead, tr, th, td, article, aside,
canvas, details, embed, figure, figcaption,
footer, header, hgroup, menu, nav, output, ruby,
section, summary, time, mark, audio, video {
	margin: 0;
	padding: 0;}


body {
	line-height: 1;
}

/*color variables*/
 :root{
	 
	 
 --green: rgb(144,161,150);
 --yellow: rgb(233,226,207);
 --dark-blue: #1E2621;
 --dark-grey: rgb(71,88,76);
 
 
 }


/*body*/
body{
    background-color: rgb(32, 39, 48);
}


/*logo animation*/
	
/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
	opacity:0;  /* make things invisible upon start */
	-webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
	-moz-animation:fadeIn ease-in 1;
	animation:fadeIn ease-in 1;

	-webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
	-moz-animation-fill-mode:forwards;
	animation-fill-mode:forwards;

	-webkit-animation-duration:2s;
	-moz-animation-duration:2s;
	animation-duration:2s;
} 

.fade-in.C {
-webkit-animation-delay: 0.5s;
-moz-animation-delay: 0.5s;
animation-delay: 0.5s;
}

.fade-in.A {
-webkit-animation-delay: 1s;
-moz-animation-delay: 1s;
animation-delay: 1s;
}
 
.fade-in.D {
-webkit-animation-delay: 1.5s;
-moz-animation-delay: 1.5s;
animation-delay: 1.5s;
}
 
.fade-in.Factory {
-webkit-animation-delay: 3s;
-moz-animation-delay: 3s;
animation-delay: 3s;
}
/*logo animation*/

/*Header*/

.header {
  padding-top:25px;
   display: grid; 
  grid-template-columns: 0.5fr 1fr 1fr 0.5fr; 
  grid-template-rows: 1fr; 
  gap: 0px 0px; 
  grid-template-areas: 
    ". . . .";
}
#logo svg{	height:150px;	weight:auto;}
	
#logo,#logo img{	height:125px;	width:auto;	text-align:center;	}

#header-text{padding-top:50px}

.header h1{font-weight:600; font-size:30px; padding:10px;}
.header h2{font-size:24px; adding:10px;    font-weight: 300;}

h1, h2, h3, h4, h5, p{
	font-family: 'Josefin Sans', sans-serif;
	color: #ffffff;
	text-align:center;
	
}

/*Banner*/

#banner{
	padding:100px 0;
}

#background-video {
  width: 100vw;
  height: 100vh;
  object-fit: cover;
  left: 0;
  right: 0;
}

#welcome{	padding: 0 15%;	text-align:center;}

#welcome h1 {letter-spacing: 0.05em; font-size:55px;  font-weight: 370;color:var(--green); padding:20px;}
#welcome p {     font-weight: 300;
    font-size: 25px;
    color: var(--green);
    padding: 3vw;}

.parallax {
  /* The image used */
  background-image: url("../../images/parallax-image.webp");

  /* Set a specific height */
  min-height: 500px; 

  /* Create the parallax scrolling effect */
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
background-size: cover;
}
  
  

  #Core-Services{
background-color: var(--yellow);
  display: grid; 
  grid-template-columns: 1fr 1fr 1fr 1fr; 
  grid-template-rows: 1fr 1fr; 
  gap: 0px 0px; 
  grid-template-areas: 
    "Title Title Title Title"
    ". . . ."; 
  }
  
  .Title { grid-area: Title; }

  .Title h1{
    letter-spacing: 0.05em;
    font-size: 55px;
    font-weight: 395;
    color: var(--dark-grey);
    padding: 5vw 0;   }
  
  
  
.service-content p{    
	font-size: 18px;
    font-weight: 300;
    color: var(--dark-grey);
    padding: 3vw;
	} 
  
.service-content img{
    height: 6vw;
    width: auto;
    display: block;
    margin-left: auto;
    margin-right: auto;

  }
  
  /*Gallery*/
  
  #galery{
	  padding:5vw;
  }
  
    #galery h1{
	  padding:2vw;
  }
  
  *,
*::before,
*::after {
	box-sizing: border-box;
}


.container {
	max-width: 100rem;
	margin: 0 auto;
	padding: 0 2rem 2rem;
}


.gallery {
	display: flex;
	flex-wrap: wrap;
	/* Compensate for excess margin on outer gallery flex items */
	margin: -1rem -1rem;
}

.gallery-item {
	/* Minimum width of 24rem and grow to fit available space */
	flex: 1 0 24rem;
	/* Margin value should be half of grid-gap value as margins on flex items don't collapse */
	margin: 1rem;
	box-shadow: 0.3rem 0.4rem 0.4rem rgba(0, 0, 0, 0.4);
	overflow: hidden;
}

.gallery-image {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
	transition: transform 400ms ease-out;
}

.gallery-image:hover {
	transform: scale(1.15);
}

/*

The following rule will only run if your browser supports CSS grid.

Remove or comment-out the code block below to see how the browser will fall-back to flexbox styling. 

*/

@supports (display: grid) {
	.gallery {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24rem, 1fr));
		grid-gap: 2rem;
	}

	.gallery,
	.gallery-item {
		margin: 0;
	}
}

/*Testimonials*/

#Testimonials{
	padding:10vw;
	background-color:white;
}

#Testimonials h1, #Testimonials p {
	padding-top:2vw;
	color:var(--dark-grey);
}